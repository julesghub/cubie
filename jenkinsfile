#!groovy

// A "Declarative" Pipeline file. No a "Scripted".

pipeline {
  agent {
      docker { 
        image 'underworldcode/underworld2:dev'
        label 'slave'
      }
  }

  stages {

    stage('Build') {
      steps {
        sh 'env'
        sh 'ls -lhtr'
        sh 'make'
      }
    }

    stage('Test Cubie') {
      steps {
        script {
          try {
            sh './go -l 11 -d 6 -r 10 -i 5'
          }
          catch (err) {
            echo "Error detected ${err}, but I'm continuing"
            currentBuild.results = "FAILURE"
            return 
          } 
        }
        
      }
    }  
/*
    stage('Test Failure') {
      steps {
        script {
          try {
            sh './go -l 11 -d -6 -r 10 -i 5'
          }
          catch (err) {
            echo "Error detected ${err}, but I'm continuing"
            currentBuild.results = "FAILURE"
            return 
          } 
        }
        
      }
    }
*/
    stage('Go Up a Directory') {
      steps {
          dir("${WORKSPACE}") { 
            sh 'ls -lhtr' 
          }
      }
    }

  }
  post {
    failure {
      // notify users when the Pipeline fails
      emailext (
          subject: "Failed Pipeline: ${currentBuild.fullDisplayName}",
          body: "Something is wrong with ${env.BUILD_URL}",
          // mimeType: 'text/html',
          to: 'house.of.barnie@gmail.com'
        )
    }
    unstable {
      // notify users when the Pipeline fails
      emailext (
          subject: "Unstable Pipeline: ${currentBuild.fullDisplayName}",
          body: "Something is unstable with ${env.BUILD_URL}",
          // mimeType: 'text/html',
          to: 'house.of.barnie@gmail.com'
        )
    }
    success {
      script {
        emailext (
          subject: "Back to normal: ${currentBuild.fullDisplayName}",
          body: "Project is back to normal",
          // mimeType: 'text/html',
          to: 'house.of.barnie@gmail.com'
        )
      }
    }
  }
}
